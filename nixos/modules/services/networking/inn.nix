{ config, lib, pkgs, ... }:

with lib;

let
  cfg = config.services.inn;
  innConf = pkgs.writeText "inn.conf"
    (if cfg.configText != null then cfg.configText else
    ''
    ##  inn.conf -- INN configuration data
    ##
    ##  Format:
    ##      <parameter>:<whitespace><value>
    ##
    ##  Blank values are allowed for certain parameters.
    ##
    ##  See the inn.conf(5) man page for a full description of each of these
    ##  options.  This sample file is divided into two sections; first, there
    ##  are the parameters that must be set (or should be set in nearly all
    ##  cases), and then all parameters are given with their defaults for
    ##  reference in the same order and with the same organization as the
    ##  inn.conf(5) documentation.

    organization: "${cfg.organization}"
    domain: "${cfg.domain}"
    pathhost: "${cfg.pathhost}"
    pathnews: /var/lib/news
    pathrun: /run/news
    pathbin: ${pkgs.inn}/bin
    pathlog: /var/log/news
    pathspool: /var/spool/news
    ovmethod: tradindexed
    hismethod: hisv6
    mta: "${pkgs.system-sendmail}/bin/sendmail -oi -oem %s"
    '');

  preStart = pkgs.writeScript "inn-pre-start" ''
    #!${pkgs.runtimeShell}
    if [ ! -f /var/lib/news/db/active ]; then
    mkdir -p /var/lib/news/db
    cat <<__EOF >/var/lib/news/db/active
    control 0000000000 0000000001 n
    control.cancel 0000000000 0000000001 n
    control.checkgroups 0000000000 0000000001 n
    control.newgroup 0000000000 0000000001 n
    control.rmgroup 0000000000 0000000001 n
    junk 0000000000 0000000001 n
    __EOF
    fi
  '';
in {
  options = {

    services.inn = {
      enable = mkOption {
        type = types.bool;
        default = false;
        description = "Whether to run INN news server.";
      };
      organization = mkOption {
        type = types.str;
        default = "A poorly-installed InterNetNews site";
        description = "What to put in the Organization: header if it is left blank by the poster.";
      };
      pathhost = mkOption {
        type = types.str;
        default = "news.example.com";
        description = "Host to insert into Path header.";
      };
      # TODO: can this default to the host's domain, if set?
      domain = mkOption {
        default = "";
        type = types.str;
        description = "Domain name for the news system.";
      };
      configText = mkOption {
        type = types.nullOr types.lines;
        default = null;
        description = ''
          Verbatim contents of inn.conf. If null (default), use the
          autogenerated file from NixOS instead.
        '';
      };
    };
  };

  config = mkIf cfg.enable {
    assertions = [{
      assertion = cfg.domain != "";
      message = "A domain must be set for INN.";
    }];

    users.users.news = {
      isSystemUser = true;
      group = "news";
      home = "/var/news";
      createHome = true;
    };

    users.groups.news = {};

    environment.etc."inn.conf".source = innConf;

    systemd.services.inn = {
      description = "INN news server";
      after = [ "network.target" "nss-lookup.target" ];
      wantedBy = [ "multi-user.target"];
      serviceConfig = {
        Type="forking";
        PIDFile="/run/news/innd.pid";
        User = "news";
        Group = "news";
        ExecStart  = "${pkgs.inn}/bin/rc.news > /var/log/news/rc.news 2>&1";
        RuntimeDirectory = "news";
        LogsDirectory = "news";
        StateDirectory = "news";
        ExecStartPre = "+${preStart}";
        AmbientCapabilities = "CAP_NET_BIND_SERVICE";
      };
      path = [ pkgs.nettools ];
    };

  };
}
